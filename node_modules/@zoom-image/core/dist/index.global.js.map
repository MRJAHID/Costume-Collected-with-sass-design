{"version":3,"sources":["../src/store.ts","../../../node_modules/.pnpm/@namnode+store@0.1.0/node_modules/@namnode/store/dist/chunk-TZNK2OF3.mjs","../src/utils.ts","../src/createZoomImageHover.ts","../src/createZoomImageMove.ts","../src/createZoomImageWheel.ts","../src/createZoomImageClick.ts","../src/makeCalculatePercentage.ts","../src/makeCalculateZoom.ts","../src/cropImage.ts"],"names":["makeImageCache","loadedImageSet","checkImageLoaded","src","store","img","imageCache","f","o","r","s","a","e","i","n","clamp","value","min","max","preventDefault","event","keySet","preventDefaultForScrollKeys","controller","disableScroll","signal","enableScroll","getSourceImage","container","sourceImgElement","getPointersCenter","first","second","makeMaybeCallFunction","predicateFn","fn","arg","scaleLinear","domainStart","domainStop","rangeStart","rangeStop","createZoomImageHover","options","zoomedImgWrapper","zoomedImg","zoomLens","finalOptions","scaleX","scaleY","offset","getOffset","element","elRect","getLimitX","getLimitY","zoomLensLeft","left","minX","zoomLensTop","top","minY","setZoomedImgSize","onSourceImageReady","setup","processZoom","handlePointerEnter","handlePointerLeave","handleScroll","offsetX","offsetY","backgroundTop","backgroundRight","newState","createZoomImageMove","zoomedImgWidth","zoomedImgHeight","handlePointerMove","calculatePositionX","newPositionX","width","calculatePositionY","newPositionY","height","containerRect","zoomPointX","zoomPointY","currentPositionX","currentPositionY","ZOOM_DELTA","createZoomImageWheel","currentZoom","prevDistance","enabledScroll","zoomType","pointerMap","isOnMove","lastPositionX","lastPositionY","startX","startY","updateZoom","currentState","setState","newCurrentZoom","zoomTargetX","zoomTargetY","processZoomWheel","delta","x","y","_onWheel","_handlePointerMove","clientX","clientY","pointerId","cachedPointerid","pointersIterator","curDistance","_handlePointerDown","_handlePointerUp","_handlePointerLeave","checkZoomEnabled","onWheel","handlePointerDown","handlePointerUp","createZoomImageClick","makeCalculatePercentage","maxZoom","makeCalculateZoom","cropImage","image","positionX","positionY","canvas","scale","croppedImageWidth","croppedImageHeight","canvasContext","sx","sy"],"mappings":"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","sourcesContent":["import { createStore } from \"@namnode/store\"\n\nexport const makeImageCache = () => {\n  const loadedImageSet = new Set<string>()\n\n  const checkImageLoaded = (src: string) => loadedImageSet.has(src)\n\n  const createZoomImage = ({\n    src,\n    store,\n    img,\n  }: {\n    src: string\n    store: ReturnType<typeof createStore>\n    img: HTMLImageElement\n  }) => {\n    img.src = src\n    if (checkImageLoaded(src)) return\n\n    loadedImageSet.add(src)\n\n    store.setState({ zoomedImgStatus: \"loading\" })\n\n    img.addEventListener(\"load\", () => {\n      store.setState({ zoomedImgStatus: \"loaded\" })\n    })\n\n    img.addEventListener(\"error\", () => {\n      store.setState({ zoomedImgStatus: \"error\" })\n    })\n  }\n\n  return {\n    createZoomImage,\n    checkImageLoaded,\n  }\n}\n\nexport const imageCache = makeImageCache()\n","function f(o){let r=new Set,s=!1,a=o,e,c=(t={})=>{e={...e,...t},i();},i=()=>{if(s)return;let t=!1;if(e){for(let n in e)if(a[n]!==e[n]){t=!0;break}}t&&(a={...a,...e},r.forEach(n=>n({state:a,updatedProperties:e})),e=void 0);};return {subscribe:t=>(r.add(t),()=>{r.delete(t);}),cleanup:()=>r.clear(),getState:()=>a,setState:c,batch:t=>{s=!0,t(),s=!1,i();}}}\n\nexport { f as a };\n","export function clamp(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value))\n}\n\nfunction preventDefault(event: Event) {\n  event.preventDefault()\n}\n\nconst keySet = new Set([\"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\"])\nfunction preventDefaultForScrollKeys(event: KeyboardEvent) {\n  if (keySet.has(event.key)) {\n    preventDefault(event)\n    return false\n  }\n}\n\nlet controller: AbortController | undefined\n\nexport function disableScroll() {\n  controller = new AbortController()\n  const { signal } = controller\n  window.addEventListener(\"DOMMouseScroll\", preventDefault, { signal })\n  window.addEventListener(\"wheel\", preventDefault, { passive: false, signal })\n  window.addEventListener(\"touchmove\", preventDefault, { passive: false, signal })\n  window.addEventListener(\"keydown\", preventDefaultForScrollKeys, { signal })\n}\n\nexport function enableScroll() {\n  controller?.abort()\n}\n\nexport function getSourceImage(container: HTMLElement) {\n  if (!container) {\n    throw new Error(\"Please specify a container for the zoom image\")\n  }\n\n  const sourceImgElement = container.querySelector(\"img\")\n  if (!sourceImgElement) {\n    throw new Error(\"Please place an image inside the container\")\n  }\n\n  return sourceImgElement\n}\n\nexport type PointerPosition = {\n  x: number\n  y: number\n}\n\nexport function getPointersCenter(first: PointerPosition, second: PointerPosition) {\n  return {\n    x: (first.x + second.x) / 2,\n    y: (first.y + second.y) / 2,\n  }\n}\n\nexport function makeMaybeCallFunction<T>(predicateFn: () => boolean, fn: (arg: T) => void) {\n  return (arg: T) => {\n    if (predicateFn()) {\n      fn(arg)\n    }\n  }\n}\n\nexport const scaleLinear =\n  ({\n    domainStart,\n    domainStop,\n    rangeStart,\n    rangeStop,\n  }: {\n    domainStart: number\n    domainStop: number\n    rangeStart: number\n    rangeStop: number\n  }) =>\n  (value: number) =>\n    rangeStart + (rangeStop - rangeStart) * ((value - domainStart) / (domainStop - domainStart))\n","import { imageCache } from \"./store\"\nimport { createStore } from \"@namnode/store\"\nimport { ZoomedImgStatus } from \"./types\"\nimport { enableScroll, disableScroll, clamp, getSourceImage } from \"./utils\"\n\nexport type ZoomImageHoverOptions = {\n  customZoom?: { width: number; height: number }\n  zoomImageSource?: string\n  zoomLensClass?: string\n  zoomTarget?: HTMLElement\n  scaleFactor?: number\n}\n\nexport type ZoomImageHoverState = {\n  zoomedImgStatus: ZoomedImgStatus\n  enabled: boolean\n}\n\nexport type ZoomImageHoverStateUpdate = { enabled: boolean }\n\ntype RequiredExcept<T, K extends keyof T> = Omit<Required<T>, K> & {\n  [P in K]?: T[P]\n}\n\nexport function createZoomImageHover(container: HTMLElement, options: ZoomImageHoverOptions = {}) {\n  const controller = new AbortController()\n  const { signal } = controller\n  const sourceImgElement = getSourceImage(container)\n  const zoomedImgWrapper = document.createElement(\"div\")\n  zoomedImgWrapper.style.overflow = \"hidden\"\n  const zoomedImg = zoomedImgWrapper.appendChild(document.createElement(\"img\"))\n  zoomedImg.style.maxWidth = \"none\"\n  const zoomLens = container.appendChild(document.createElement(\"div\"))\n\n  const finalOptions: RequiredExcept<ZoomImageHoverOptions, \"zoomTarget\" | \"customZoom\"> = {\n    zoomImageSource: options.zoomImageSource || sourceImgElement.src,\n    zoomLensClass: options.zoomLensClass || \"\",\n    customZoom: options.customZoom,\n    scaleFactor: options.scaleFactor || 1,\n    zoomTarget: options.zoomTarget,\n  }\n\n  const store = createStore<ZoomImageHoverState>({\n    zoomedImgStatus: imageCache.checkImageLoaded(finalOptions.zoomImageSource) ? \"loaded\" : \"idle\",\n    enabled: true,\n  })\n\n  let scaleX: number\n  let scaleY: number\n  let offset: { left: number; top: number }\n\n  function getOffset(element: HTMLElement) {\n    const elRect = element.getBoundingClientRect()\n    return { left: elRect.left, top: elRect.top }\n  }\n\n  function getLimitX(value: number) {\n    return sourceImgElement.width - value\n  }\n\n  function getLimitY(value: number) {\n    return sourceImgElement.height - value\n  }\n\n  function zoomLensLeft(left: number) {\n    const minX = zoomLens.clientWidth / 2\n    return clamp(left, minX, getLimitX(minX)) - minX\n  }\n\n  function zoomLensTop(top: number) {\n    const minY = zoomLens.clientHeight / 2\n    return clamp(top, minY, getLimitY(minY)) - minY\n  }\n\n  function setZoomedImgSize() {\n    // Custom zoom available\n    if (finalOptions.customZoom) {\n      zoomedImgWrapper.style.width = finalOptions.customZoom.width + \"px\"\n      zoomedImgWrapper.style.height = finalOptions.customZoom.height + \"px\"\n      return\n    }\n\n    // Default zoom to source image size\n    zoomedImgWrapper.style.width = sourceImgElement.width + \"px\"\n    zoomedImgWrapper.style.height = sourceImgElement.height + \"px\"\n  }\n\n  function onSourceImageReady() {\n    setZoomedImgSize()\n    offset = getOffset(sourceImgElement)\n    // Calculate scale and offset\n    scaleX = sourceImgElement.naturalWidth / sourceImgElement.width\n    scaleY = sourceImgElement.naturalHeight / sourceImgElement.height\n\n    zoomedImg.style.display = \"block\"\n    zoomedImg.style.display = \"none\"\n\n    // Setup default zoom lens style\n    zoomLens.style.position = \"absolute\"\n\n    if (!finalOptions.zoomLensClass) {\n      zoomLens.style.background = \"rgba(238, 130, 238, 0.5)\"\n    }\n\n    if (finalOptions.customZoom) {\n      zoomLens.style.width = (finalOptions.customZoom.width / scaleX) * finalOptions.scaleFactor + \"px\"\n      zoomLens.style.height = (finalOptions.customZoom.height / scaleY) * finalOptions.scaleFactor + \"px\"\n      return\n    }\n\n    zoomLens.style.width = sourceImgElement.clientWidth / scaleX + \"px\"\n    zoomLens.style.height = sourceImgElement.clientHeight / scaleY + \"px\"\n  }\n\n  function setup() {\n    zoomLens.style.display = \"none\"\n\n    if (finalOptions.zoomLensClass) {\n      zoomLens.classList.add(finalOptions.zoomLensClass)\n    }\n\n    // setup event listeners\n    container.addEventListener(\"pointerdown\", processZoom, { signal })\n    container.addEventListener(\"pointermove\", processZoom, { signal })\n    container.addEventListener(\"pointerenter\", handlePointerEnter, { signal })\n    container.addEventListener(\"pointerleave\", handlePointerLeave, { signal })\n    window.addEventListener(\"scroll\", handleScroll, { signal })\n\n    // Setup zoomed image position if zoom target is specified\n    if (finalOptions.zoomTarget) {\n      finalOptions.zoomTarget.appendChild(zoomedImgWrapper)\n      return\n    }\n\n    container.appendChild(zoomedImgWrapper)\n    zoomedImg.style.position = \"absolute\"\n    zoomedImg.style.top = \"0px\"\n    zoomedImg.style.right = \"0px\"\n    zoomedImg.style.transform = \"translateX(100%)\"\n  }\n\n  function processZoom(event: PointerEvent) {\n    let offsetX: number\n    let offsetY: number\n    let backgroundTop: number\n    let backgroundRight: number\n    // let backgroundPosition: string\n    if (offset) {\n      offsetX = zoomLensLeft(event.clientX - offset.left)\n      offsetY = zoomLensTop(event.clientY - offset.top)\n      backgroundTop = (offsetX * scaleX) / finalOptions.scaleFactor\n      backgroundRight = (offsetY * scaleY) / finalOptions.scaleFactor\n      zoomedImg.style.transform = \"translate(\" + -backgroundTop + \"px,\" + -backgroundRight + \"px)\"\n      zoomLens.style.cssText += \"transform:\" + \"translate(\" + offsetX + \"px,\" + offsetY + \"px); top: 0; left: 0;\"\n    }\n  }\n\n  async function handlePointerEnter() {\n    imageCache.createZoomImage({\n      img: zoomedImg,\n      src: finalOptions.zoomImageSource,\n      store,\n    })\n\n    disableScroll()\n    zoomedImg.style.display = \"block\"\n    zoomLens.style.display = \"block\"\n  }\n\n  function handlePointerLeave() {\n    enableScroll()\n    zoomedImg.style.display = \"none\"\n    zoomLens.style.display = \"none\"\n  }\n\n  function handleScroll() {\n    offset = getOffset(sourceImgElement)\n  }\n\n  if (sourceImgElement.complete) {\n    onSourceImageReady()\n  } else {\n    sourceImgElement.onload = onSourceImageReady\n  }\n\n  setup()\n\n  return {\n    cleanup: () => {\n      controller.abort()\n      container.removeChild(zoomLens)\n\n      if (finalOptions.zoomTarget) {\n        finalOptions.zoomTarget.removeChild(zoomedImgWrapper)\n        return\n      }\n\n      container.removeChild(zoomedImgWrapper)\n    },\n    subscribe: store.subscribe,\n    getState: store.getState,\n    setState: (newState: ZoomImageHoverStateUpdate) => {\n      store.setState(newState)\n    },\n  }\n}\n","import { imageCache } from \"./store\"\nimport { createStore } from \"@namnode/store\"\nimport { ZoomedImgStatus } from \"./types\"\nimport { disableScroll, enableScroll, getSourceImage } from \"./utils\"\n\nexport type ZoomImageMoveOptions = {\n  zoomFactor?: number\n  zoomImageSource?: string\n}\n\nexport type ZoomImageMoveState = {\n  zoomedImgStatus: ZoomedImgStatus\n}\n\nexport function createZoomImageMove(container: HTMLElement, options: ZoomImageMoveOptions = {}) {\n  const sourceImgElement = getSourceImage(container)\n  const finalOptions: Required<ZoomImageMoveOptions> = {\n    zoomFactor: options.zoomFactor ?? 4,\n    zoomImageSource: options.zoomImageSource ?? sourceImgElement.src,\n  }\n\n  const store = createStore<ZoomImageMoveState>({\n    zoomedImgStatus: imageCache.checkImageLoaded(finalOptions.zoomImageSource) ? \"loaded\" : \"idle\",\n  })\n\n  const zoomedImgWidth = sourceImgElement.clientWidth * finalOptions.zoomFactor\n  const zoomedImgHeight = sourceImgElement.clientHeight * finalOptions.zoomFactor\n  const zoomedImg = container.appendChild(document.createElement(\"img\"))\n  zoomedImg.style.maxWidth = \"none\"\n  zoomedImg.style.width = `${zoomedImgWidth}px`\n  zoomedImg.style.height = `${zoomedImgHeight}px`\n  zoomedImg.style.position = \"absolute\"\n  zoomedImg.style.top = \"0\"\n  zoomedImg.style.left = \"0\"\n\n  function handlePointerEnter(event: PointerEvent) {\n    zoomedImg.style.display = \"block\"\n    imageCache.createZoomImage({\n      img: zoomedImg,\n      src: finalOptions.zoomImageSource,\n      store,\n    })\n\n    processZoom(event)\n    disableScroll()\n  }\n\n  function handlePointerMove(event: PointerEvent) {\n    processZoom(event)\n  }\n\n  function handlePointerLeave() {\n    enableScroll()\n    zoomedImg.style.display = \"none\"\n    zoomedImg.style.transform = \"none\"\n  }\n\n  const calculatePositionX = (newPositionX: number) => {\n    const width = container.clientWidth\n    if (newPositionX > 0) return 0\n    if (newPositionX + width * finalOptions.zoomFactor < width) return -width * (finalOptions.zoomFactor - 1)\n    return newPositionX\n  }\n\n  const calculatePositionY = (newPositionY: number) => {\n    const height = container.clientHeight\n    if (newPositionY > 0) return 0\n    if (newPositionY + height * finalOptions.zoomFactor < height) return -height * (finalOptions.zoomFactor - 1)\n    return newPositionY\n  }\n\n  function processZoom(event: PointerEvent) {\n    zoomedImg.style.display = \"block\"\n    imageCache.createZoomImage({\n      img: zoomedImg,\n      src: finalOptions.zoomImageSource,\n      store,\n    })\n\n    const containerRect = container.getBoundingClientRect()\n    const zoomPointX = event.clientX - containerRect.left\n    const zoomPointY = event.clientY - containerRect.top\n\n    const currentPositionX = calculatePositionX(-zoomPointX * finalOptions.zoomFactor + zoomPointX)\n    const currentPositionY = calculatePositionY(-zoomPointY * finalOptions.zoomFactor + zoomPointY)\n    zoomedImg.style.transform = `translate(${currentPositionX}px, ${currentPositionY}px)`\n  }\n\n  const controller = new AbortController()\n  const { signal } = controller\n  container.addEventListener(\"pointerenter\", handlePointerEnter, { signal })\n  container.addEventListener(\"pointermove\", handlePointerMove, { signal })\n  container.addEventListener(\"pointerleave\", handlePointerLeave, { signal })\n\n  return {\n    cleanup: () => {\n      controller.abort()\n      container.removeChild(zoomedImg)\n      store.cleanup()\n    },\n    subscribe: store.subscribe,\n    getState: store.getState,\n  }\n}\n","import { createStore } from \"@namnode/store\"\nimport { clamp, disableScroll, enableScroll, getPointersCenter, getSourceImage, makeMaybeCallFunction } from \"./utils\"\nimport type { PointerPosition } from \"./utils\"\n\nexport type ZoomImageWheelOptions = {\n  maxZoom?: number\n  wheelZoomRatio?: number\n}\n\n/* The delta values are not consistent across browsers.\n * We need to normalize them to a consistent value.\n * https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaY\n */\nconst ZOOM_DELTA = 0.5\n\nexport type ZoomImageWheelState = {\n  currentZoom: number\n  enable: boolean\n  currentPositionX: number\n  currentPositionY: number\n}\n\nexport type ZoomImageWheelStateUpdate = Partial<{ enable: boolean; currentZoom: number }>\n\nexport function createZoomImageWheel(container: HTMLElement, options: ZoomImageWheelOptions = {}) {\n  const store = createStore<ZoomImageWheelState>({\n    currentZoom: 1,\n    enable: true,\n    currentPositionX: 0,\n    currentPositionY: 0,\n  })\n\n  const sourceImgElement = getSourceImage(container)\n  const finalOptions: Required<ZoomImageWheelOptions> = {\n    maxZoom: options.maxZoom || 4,\n    wheelZoomRatio: options.wheelZoomRatio || 0.1,\n  }\n\n  const calculatePositionX = (newPositionX: number, currentZoom: number) => {\n    const width = container.clientWidth\n    if (newPositionX > 0) return 0\n    if (newPositionX + width * currentZoom < width) return -width * (currentZoom - 1)\n    return newPositionX\n  }\n\n  const calculatePositionY = (newPositionY: number, currentZoom: number) => {\n    const height = container.clientHeight\n\n    if (newPositionY > 0) return 0\n    if (newPositionY + height * currentZoom < height) return -height * (currentZoom - 1)\n    return newPositionY\n  }\n\n  let prevDistance = -1\n  let enabledScroll = true\n  let zoomType: \"wheel\" | \"pinch\" | \"\" = \"\"\n  const pointerMap = new Map<number, { x: number; y: number }>()\n\n  let isOnMove = false\n  let lastPositionX = 0\n  let lastPositionY = 0\n  let startX = 0\n  let startY = 0\n\n  container.style.overflow = \"hidden\"\n  sourceImgElement.style.transformOrigin = \"0 0\"\n\n  function updateZoom() {\n    const currentState = store.getState()\n    sourceImgElement.style.transform = `translate(${currentState.currentPositionX}px, ${currentState.currentPositionY}px) scale(${currentState.currentZoom})`\n  }\n\n  function setState(newState: ZoomImageWheelStateUpdate) {\n    store.batch(() => {\n      const currentState = store.getState()\n      if (typeof newState.enable === \"boolean\" && newState.enable !== currentState.enable) {\n        store.setState({\n          enable: newState.enable,\n        })\n\n        if (!newState.enable) {\n          return\n        }\n      }\n\n      if (typeof newState.currentZoom === \"number\" && newState.currentZoom !== currentState.currentZoom) {\n        const newCurrentZoom = clamp(newState.currentZoom, 1, finalOptions.maxZoom)\n\n        if (newCurrentZoom === currentState.currentZoom) {\n          return\n        }\n\n        const zoomPointX = container.clientWidth / 2\n        const zoomPointY = container.clientHeight / 2\n\n        const zoomTargetX = (zoomPointX - currentState.currentPositionX) / currentState.currentZoom\n        const zoomTargetY = (zoomPointY - currentState.currentPositionY) / currentState.currentZoom\n\n        store.setState({\n          currentZoom: newCurrentZoom,\n          currentPositionX: calculatePositionX(-zoomTargetX * newCurrentZoom + zoomPointX, newCurrentZoom),\n          currentPositionY: calculatePositionY(-zoomTargetY * newCurrentZoom + zoomPointY, newCurrentZoom),\n        })\n      }\n    })\n\n    updateZoom()\n  }\n\n  function processZoomWheel({ delta, x, y }: { delta: number; x: number; y: number }) {\n    const containerRect = container.getBoundingClientRect()\n    const zoomPointX = x - containerRect.left\n    const zoomPointY = y - containerRect.top\n    const currentState = store.getState()\n\n    const zoomTargetX = (zoomPointX - currentState.currentPositionX) / currentState.currentZoom\n    const zoomTargetY = (zoomPointY - currentState.currentPositionY) / currentState.currentZoom\n\n    const newCurrentZoom = clamp(\n      currentState.currentZoom + delta * finalOptions.wheelZoomRatio * currentState.currentZoom,\n      1,\n      finalOptions.maxZoom,\n    )\n\n    store.setState({\n      currentZoom: newCurrentZoom,\n      currentPositionX: calculatePositionX(-zoomTargetX * newCurrentZoom + zoomPointX, newCurrentZoom),\n      currentPositionY: calculatePositionY(-zoomTargetY * newCurrentZoom + zoomPointY, newCurrentZoom),\n    })\n  }\n\n  function _onWheel(event: WheelEvent) {\n    event.preventDefault()\n    const delta = -clamp(event.deltaY, -ZOOM_DELTA, ZOOM_DELTA)\n    processZoomWheel({ delta, x: event.clientX, y: event.clientY })\n    updateZoom()\n  }\n\n  function _handlePointerMove(event: PointerEvent) {\n    event.preventDefault()\n    const { clientX, clientY, pointerId } = event\n    for (const [cachedPointerid] of pointerMap.entries()) {\n      if (cachedPointerid === pointerId) {\n        pointerMap.set(cachedPointerid, { x: clientX, y: clientY })\n      }\n    }\n\n    if (!isOnMove) {\n      return\n    }\n\n    if (pointerMap.size === 2 && zoomType === \"pinch\") {\n      const pointersIterator = pointerMap.values()\n      const first = pointersIterator.next().value as PointerPosition\n      const second = pointersIterator.next().value as PointerPosition\n      const curDistance = Math.sqrt(Math.pow(first.x - second.x, 2) + Math.pow(first.y - second.y, 2))\n      const { x, y } = getPointersCenter(first, second)\n      if (prevDistance > 0) {\n        if (curDistance > prevDistance) {\n          // The distance between the two pointers has increased\n          processZoomWheel({ delta: ZOOM_DELTA, x, y })\n        }\n        if (curDistance < prevDistance) {\n          // The distance between the two pointers has decreased\n          processZoomWheel({ delta: -ZOOM_DELTA, x, y })\n        }\n      }\n      // Store the distance for the next move event\n      prevDistance = curDistance\n      updateZoom()\n      return\n    }\n\n    if (pointerMap.size === 1 && zoomType !== \"pinch\") {\n      const offsetX = clientX - startX\n      const offsetY = clientY - startY\n      const { currentZoom } = store.getState()\n      store.setState({\n        currentPositionX: calculatePositionX(lastPositionX + offsetX, currentZoom),\n        currentPositionY: calculatePositionY(lastPositionY + offsetY, currentZoom),\n      })\n      updateZoom()\n    }\n  }\n\n  function _handlePointerDown(event: PointerEvent) {\n    event.preventDefault()\n\n    if (pointerMap.size === 2) {\n      return\n    }\n\n    if (enabledScroll) {\n      disableScroll()\n      enabledScroll = false\n    }\n\n    const { clientX, clientY, pointerId } = event\n    isOnMove = true\n    const currentState = store.getState()\n    lastPositionX = currentState.currentPositionX\n    lastPositionY = currentState.currentPositionY\n    startX = clientX\n    startY = clientY\n    pointerMap.set(pointerId, { x: clientX, y: clientY })\n\n    if (pointerMap.size === 2) {\n      zoomType = \"pinch\"\n    }\n  }\n\n  function _handlePointerUp(event: PointerEvent) {\n    pointerMap.delete(event.pointerId)\n\n    if (pointerMap.size === 0) {\n      isOnMove = false\n      prevDistance = -1\n    }\n\n    if (pointerMap.size === 0 && !enabledScroll) {\n      enableScroll()\n      enabledScroll = true\n    }\n\n    if (pointerMap.size === 0 && zoomType === \"pinch\") {\n      zoomType = \"\"\n    }\n\n    const currentState = store.getState()\n    lastPositionX = currentState.currentPositionX\n    lastPositionY = currentState.currentPositionY\n  }\n\n  function _handlePointerLeave() {\n    pointerMap.clear()\n    isOnMove = false\n    prevDistance = -1\n    if (!enabledScroll) {\n      enableScroll()\n      enabledScroll = true\n    }\n  }\n\n  function checkZoomEnabled() {\n    return store.getState().enable\n  }\n\n  const onWheel = makeMaybeCallFunction(checkZoomEnabled, _onWheel)\n  const handlePointerDown = makeMaybeCallFunction(checkZoomEnabled, _handlePointerDown)\n  const handlePointerLeave = makeMaybeCallFunction(checkZoomEnabled, _handlePointerLeave)\n  const handlePointerMove = makeMaybeCallFunction(checkZoomEnabled, _handlePointerMove)\n  const handlePointerUp = makeMaybeCallFunction(checkZoomEnabled, _handlePointerUp)\n\n  const controller = new AbortController()\n  const { signal } = controller\n  container.addEventListener(\"wheel\", onWheel, { signal })\n  container.addEventListener(\"pointerdown\", handlePointerDown, { signal })\n  container.addEventListener(\"pointerleave\", handlePointerLeave, { signal })\n  container.addEventListener(\"pointermove\", handlePointerMove, { signal })\n  container.addEventListener(\"pointerup\", handlePointerUp, { signal })\n\n  return {\n    cleanup() {\n      controller.abort()\n      store.cleanup()\n    },\n    subscribe: store.subscribe,\n    setState,\n    getState: store.getState,\n  }\n}\n","import { imageCache } from \"./store\"\nimport { createStore } from \"@namnode/store\"\nimport { ZoomedImgStatus } from \"./types\"\nimport { disableScroll, enableScroll, getSourceImage } from \"./utils\"\n\nexport type ZoomImageClickOptions = {\n  zoomFactor?: number\n  zoomImageSource?: string\n}\n\nexport type ZoomImageClickState = {\n  zoomedImgStatus: ZoomedImgStatus\n}\n\nexport function createZoomImageClick(container: HTMLElement, options: ZoomImageClickOptions = {}) {\n  const sourceImgElement = getSourceImage(container)\n  const finalOptions: Required<ZoomImageClickOptions> = {\n    zoomFactor: options.zoomFactor ?? 4,\n    zoomImageSource: options.zoomImageSource ?? sourceImgElement.src,\n  }\n\n  let isOnMove = false\n\n  const store = createStore<ZoomImageClickState>({\n    zoomedImgStatus: imageCache.checkImageLoaded(finalOptions.zoomImageSource) ? \"loaded\" : \"idle\",\n  })\n\n  const zoomedImgWidth = sourceImgElement.clientWidth * finalOptions.zoomFactor\n  const zoomedImgHeight = sourceImgElement.clientHeight * finalOptions.zoomFactor\n  const zoomedImg = container.appendChild(document.createElement(\"img\"))\n  zoomedImg.style.maxWidth = \"none\"\n  zoomedImg.style.width = `${zoomedImgWidth}px`\n  zoomedImg.style.height = `${zoomedImgHeight}px`\n  zoomedImg.style.position = \"absolute\"\n  zoomedImg.style.top = \"0\"\n  zoomedImg.style.left = \"0\"\n\n  function handlePointerMove(event: PointerEvent) {\n    if (!isOnMove) {\n      return\n    }\n\n    processZoom(event)\n  }\n\n  const calculatePositionX = (newPositionX: number) => {\n    const width = container.clientWidth\n    if (newPositionX > 0) return 0\n    if (newPositionX + width * finalOptions.zoomFactor < width) return -width * (finalOptions.zoomFactor - 1)\n    return newPositionX\n  }\n\n  const calculatePositionY = (newPositionY: number) => {\n    const height = container.clientHeight\n    if (newPositionY > 0) return 0\n    if (newPositionY + height * finalOptions.zoomFactor < height) return -height * (finalOptions.zoomFactor - 1)\n    return newPositionY\n  }\n\n  function processZoom(event: PointerEvent) {\n    zoomedImg.style.display = \"block\"\n    imageCache.createZoomImage({\n      img: zoomedImg,\n      src: finalOptions.zoomImageSource,\n      store,\n    })\n\n    const containerRect = container.getBoundingClientRect()\n    const zoomPointX = event.clientX - containerRect.left\n    const zoomPointY = event.clientY - containerRect.top\n\n    const currentPositionX = calculatePositionX(-zoomPointX * finalOptions.zoomFactor + zoomPointX)\n    const currentPositionY = calculatePositionY(-zoomPointY * finalOptions.zoomFactor + zoomPointY)\n\n    zoomedImg.style.transform = `translate(${currentPositionX}px, ${currentPositionY}px)`\n  }\n\n  function handlePointerDown(event: PointerEvent) {\n    if (isOnMove) {\n      isOnMove = false\n      zoomedImg.style.display = \"none\"\n      return\n    }\n\n    processZoom(event)\n    isOnMove = true\n  }\n\n  const controller = new AbortController()\n  const { signal } = controller\n  container.addEventListener(\"pointerdown\", handlePointerDown, { signal })\n  container.addEventListener(\"pointerenter\", disableScroll, { signal })\n  container.addEventListener(\"pointerleave\", enableScroll, { signal })\n  container.addEventListener(\"pointermove\", handlePointerMove, { signal })\n\n  return {\n    cleanup: () => {\n      controller.abort()\n      container.removeChild(zoomedImg)\n      store.cleanup()\n    },\n    subscribe: store.subscribe,\n    getState: store.getState,\n  }\n}\n","import { scaleLinear } from \"./utils\"\n\nexport const makeCalculatePercentage = (maxZoom: number) =>\n  scaleLinear({\n    domainStart: 1,\n    domainStop: maxZoom,\n    rangeStart: 0,\n    rangeStop: 100,\n  })\n","import { scaleLinear } from \"./utils\"\n\nexport const makeCalculateZoom = (maxZoom: number) =>\n  scaleLinear({\n    domainStart: 0,\n    domainStop: 100,\n    rangeStart: 1,\n    rangeStop: maxZoom,\n  })\n","type CropImageArg = {\n  currentZoom: number\n  image: HTMLImageElement\n  positionX: number\n  positionY: number\n}\n\nexport const cropImage = ({ image, positionX, positionY, currentZoom }: CropImageArg) => {\n  const canvas = document.createElement(\"canvas\")\n  const scale = image.naturalWidth / (image.clientWidth * currentZoom)\n  const croppedImageWidth = image.clientWidth * scale\n  const croppedImageHeight = image.clientHeight * scale\n  canvas.width = croppedImageWidth\n  canvas.height = croppedImageHeight\n  const canvasContext = canvas.getContext(\"2d\") as CanvasRenderingContext2D\n\n  const sx = Math.max(0, Math.abs(positionX) * scale)\n  const sy = Math.max(0, Math.abs(positionY) * scale)\n\n  canvasContext.drawImage(\n    image,\n    sx,\n    sy,\n    croppedImageWidth,\n    croppedImageHeight,\n    0,\n    0,\n    croppedImageWidth,\n    croppedImageHeight,\n  )\n\n  return canvas.toDataURL()\n}\n"]}