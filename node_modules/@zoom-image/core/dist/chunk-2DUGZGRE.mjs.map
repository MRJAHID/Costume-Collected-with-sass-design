{"version":3,"sources":["../src/utils.ts"],"names":["clamp","value","min","max","preventDefault","event","keySet","preventDefaultForScrollKeys","controller","disableScroll","signal","enableScroll","getSourceImage","container","sourceImgElement","getPointersCenter","first","second","makeMaybeCallFunction","predicateFn","fn","arg","scaleLinear","domainStart","domainStop","rangeStart","rangeStop"],"mappings":"AAAO,SAASA,EAAMC,EAAeC,EAAaC,EAAa,CAC7D,OAAO,KAAK,IAAID,EAAK,KAAK,IAAIC,EAAKF,CAAK,CAAC,CAC3C,CAEA,SAASG,EAAeC,EAAc,CACpCA,EAAM,eAAe,CACvB,CAEA,IAAMC,EAAS,IAAI,IAAI,CAAC,UAAW,aAAc,YAAa,WAAW,CAAC,EAC1E,SAASC,EAA4BF,EAAsB,CACzD,GAAIC,EAAO,IAAID,EAAM,GAAG,EACtB,OAAAD,EAAeC,CAAK,EACb,EAEX,CAEA,IAAIG,EAEG,SAASC,GAAgB,CAC9BD,EAAa,IAAI,gBACjB,GAAM,CAAE,OAAAE,CAAO,EAAIF,EACnB,OAAO,iBAAiB,iBAAkBJ,EAAgB,CAAE,OAAAM,CAAO,CAAC,EACpE,OAAO,iBAAiB,QAASN,EAAgB,CAAE,QAAS,GAAO,OAAAM,CAAO,CAAC,EAC3E,OAAO,iBAAiB,YAAaN,EAAgB,CAAE,QAAS,GAAO,OAAAM,CAAO,CAAC,EAC/E,OAAO,iBAAiB,UAAWH,EAA6B,CAAE,OAAAG,CAAO,CAAC,CAC5E,CAEO,SAASC,GAAe,CAC7BH,GAAY,MAAM,CACpB,CAEO,SAASI,EAAeC,EAAwB,CACrD,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,+CAA+C,EAGjE,IAAMC,EAAmBD,EAAU,cAAc,KAAK,EACtD,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,4CAA4C,EAG9D,OAAOA,CACT,CAOO,SAASC,EAAkBC,EAAwBC,EAAyB,CACjF,MAAO,CACL,GAAID,EAAM,EAAIC,EAAO,GAAK,EAC1B,GAAID,EAAM,EAAIC,EAAO,GAAK,CAC5B,CACF,CAEO,SAASC,EAAyBC,EAA4BC,EAAsB,CACzF,OAAQC,GAAW,CACbF,EAAY,GACdC,EAAGC,CAAG,CAEV,CACF,CAEO,IAAMC,EACX,CAAC,CACC,YAAAC,EACA,WAAAC,EACA,WAAAC,EACA,UAAAC,CACF,IAMCzB,GACCwB,GAAcC,EAAYD,KAAgBxB,EAAQsB,IAAgBC,EAAaD","sourcesContent":["export function clamp(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value))\n}\n\nfunction preventDefault(event: Event) {\n  event.preventDefault()\n}\n\nconst keySet = new Set([\"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\"])\nfunction preventDefaultForScrollKeys(event: KeyboardEvent) {\n  if (keySet.has(event.key)) {\n    preventDefault(event)\n    return false\n  }\n}\n\nlet controller: AbortController | undefined\n\nexport function disableScroll() {\n  controller = new AbortController()\n  const { signal } = controller\n  window.addEventListener(\"DOMMouseScroll\", preventDefault, { signal })\n  window.addEventListener(\"wheel\", preventDefault, { passive: false, signal })\n  window.addEventListener(\"touchmove\", preventDefault, { passive: false, signal })\n  window.addEventListener(\"keydown\", preventDefaultForScrollKeys, { signal })\n}\n\nexport function enableScroll() {\n  controller?.abort()\n}\n\nexport function getSourceImage(container: HTMLElement) {\n  if (!container) {\n    throw new Error(\"Please specify a container for the zoom image\")\n  }\n\n  const sourceImgElement = container.querySelector(\"img\")\n  if (!sourceImgElement) {\n    throw new Error(\"Please place an image inside the container\")\n  }\n\n  return sourceImgElement\n}\n\nexport type PointerPosition = {\n  x: number\n  y: number\n}\n\nexport function getPointersCenter(first: PointerPosition, second: PointerPosition) {\n  return {\n    x: (first.x + second.x) / 2,\n    y: (first.y + second.y) / 2,\n  }\n}\n\nexport function makeMaybeCallFunction<T>(predicateFn: () => boolean, fn: (arg: T) => void) {\n  return (arg: T) => {\n    if (predicateFn()) {\n      fn(arg)\n    }\n  }\n}\n\nexport const scaleLinear =\n  ({\n    domainStart,\n    domainStop,\n    rangeStart,\n    rangeStop,\n  }: {\n    domainStart: number\n    domainStop: number\n    rangeStart: number\n    rangeStop: number\n  }) =>\n  (value: number) =>\n    rangeStart + (rangeStop - rangeStart) * ((value - domainStart) / (domainStop - domainStart))\n"]}