{"version":3,"sources":["../../../node_modules/.pnpm/@namnode+store@0.1.0/node_modules/@namnode/store/dist/chunk-TZNK2OF3.mjs","../src/utils.ts","../src/createZoomImageWheel.ts"],"names":["f","o","r","s","a","e","c","t","i","n","clamp","value","min","max","preventDefault","event","keySet","preventDefaultForScrollKeys","controller","disableScroll","signal","enableScroll","getSourceImage","container","sourceImgElement","getPointersCenter","first","second","makeMaybeCallFunction","predicateFn","fn","arg","ZOOM_DELTA","createZoomImageWheel","options","store","finalOptions","calculatePositionX","newPositionX","currentZoom","width","calculatePositionY","newPositionY","height","prevDistance","enabledScroll","zoomType","pointerMap","isOnMove","lastPositionX","lastPositionY","startX","startY","updateZoom","currentState","setState","newState","newCurrentZoom","zoomPointX","zoomPointY","zoomTargetX","zoomTargetY","processZoomWheel","delta","x","y","containerRect","_onWheel","_handlePointerMove","clientX","clientY","pointerId","cachedPointerid","pointersIterator","curDistance","offsetX","offsetY","_handlePointerDown","_handlePointerUp","_handlePointerLeave","checkZoomEnabled","onWheel","handlePointerDown","handlePointerLeave","handlePointerMove","handlePointerUp"],"mappings":"AAAA,SAASA,EAAEC,EAAE,CAAC,IAAIC,EAAE,IAAI,IAAIC,EAAE,GAAGC,EAAEH,EAAEI,EAAEC,EAAE,CAACC,EAAE,CAAC,IAAI,CAACF,EAAE,CAAC,GAAGA,EAAE,GAAGE,CAAC,EAAEC,EAAE,CAAE,EAAEA,EAAE,IAAI,CAAC,GAAGL,EAAE,OAAO,IAAII,EAAE,GAAG,GAAGF,GAAG,QAAQI,KAAKJ,EAAE,GAAGD,EAAEK,CAAC,IAAIJ,EAAEI,CAAC,EAAE,CAACF,EAAE,GAAG,OAAOA,IAAIH,EAAE,CAAC,GAAGA,EAAE,GAAGC,CAAC,EAAEH,EAAE,QAAQO,GAAGA,EAAE,CAAC,MAAML,EAAE,kBAAkBC,CAAC,CAAC,CAAC,EAAEA,EAAE,OAAQ,EAAE,MAAO,CAAC,UAAUE,IAAIL,EAAE,IAAIK,CAAC,EAAE,IAAI,CAACL,EAAE,OAAOK,CAAC,CAAE,GAAG,QAAQ,IAAIL,EAAE,MAAM,EAAE,SAAS,IAAIE,EAAE,SAASE,EAAE,MAAMC,GAAG,CAACJ,EAAE,GAAGI,EAAE,EAAEJ,EAAE,GAAGK,EAAE,CAAE,CAAC,CAAC,CCA1V,SAASE,EAAMC,EAAeC,EAAaC,EAAa,CAC7D,OAAO,KAAK,IAAID,EAAK,KAAK,IAAIC,EAAKF,CAAK,CAAC,CAC3C,CAEA,SAASG,EAAeC,EAAc,CACpCA,EAAM,eAAe,CACvB,CAEA,IAAMC,EAAS,IAAI,IAAI,CAAC,UAAW,aAAc,YAAa,WAAW,CAAC,EAC1E,SAASC,EAA4BF,EAAsB,CACzD,GAAIC,EAAO,IAAID,EAAM,GAAG,EACtB,OAAAD,EAAeC,CAAK,EACb,EAEX,CAEA,IAAIG,EAEG,SAASC,GAAgB,CAC9BD,EAAa,IAAI,gBACjB,GAAM,CAAE,OAAAE,CAAO,EAAIF,EACnB,OAAO,iBAAiB,iBAAkBJ,EAAgB,CAAE,OAAAM,CAAO,CAAC,EACpE,OAAO,iBAAiB,QAASN,EAAgB,CAAE,QAAS,GAAO,OAAAM,CAAO,CAAC,EAC3E,OAAO,iBAAiB,YAAaN,EAAgB,CAAE,QAAS,GAAO,OAAAM,CAAO,CAAC,EAC/E,OAAO,iBAAiB,UAAWH,EAA6B,CAAE,OAAAG,CAAO,CAAC,CAC5E,CAEO,SAASC,GAAe,CAC7BH,GAAY,MAAM,CACpB,CAEO,SAASI,EAAeC,EAAwB,CACrD,GAAI,CAACA,EACH,MAAM,IAAI,MAAM,+CAA+C,EAGjE,IAAMC,EAAmBD,EAAU,cAAc,KAAK,EACtD,GAAI,CAACC,EACH,MAAM,IAAI,MAAM,4CAA4C,EAG9D,OAAOA,CACT,CAOO,SAASC,EAAkBC,EAAwBC,EAAyB,CACjF,MAAO,CACL,GAAID,EAAM,EAAIC,EAAO,GAAK,EAC1B,GAAID,EAAM,EAAIC,EAAO,GAAK,CAC5B,CACF,CAEO,SAASC,EAAyBC,EAA4BC,EAAsB,CACzF,OAAQC,GAAW,CACbF,EAAY,GACdC,EAAGC,CAAG,CAEV,CACF,CCjDA,IAAMC,EAAa,GAWZ,SAASC,GAAqBV,EAAwBW,EAAiC,CAAC,EAAG,CAChG,IAAMC,EAAQnC,EAAiC,CAC7C,YAAa,EACb,OAAQ,GACR,iBAAkB,EAClB,iBAAkB,CACpB,CAAC,EAEKwB,EAAmBF,EAAeC,CAAS,EAC3Ca,EAAgD,CACpD,QAASF,EAAQ,SAAW,EAC5B,eAAgBA,EAAQ,gBAAkB,EAC5C,EAEMG,EAAqB,CAACC,EAAsBC,IAAwB,CACxE,IAAMC,EAAQjB,EAAU,YACxB,OAAIe,EAAe,EAAU,EACzBA,EAAeE,EAAQD,EAAcC,EAAc,CAACA,GAASD,EAAc,GACxED,CACT,EAEMG,EAAqB,CAACC,EAAsBH,IAAwB,CACxE,IAAMI,EAASpB,EAAU,aAEzB,OAAImB,EAAe,EAAU,EACzBA,EAAeC,EAASJ,EAAcI,EAAe,CAACA,GAAUJ,EAAc,GAC3EG,CACT,EAEIE,EAAe,GACfC,EAAgB,GAChBC,EAAmC,GACjCC,EAAa,IAAI,IAEnBC,EAAW,GACXC,EAAgB,EAChBC,EAAgB,EAChBC,EAAS,EACTC,EAAS,EAEb7B,EAAU,MAAM,SAAW,SAC3BC,EAAiB,MAAM,gBAAkB,MAEzC,SAAS6B,GAAa,CACpB,IAAMC,EAAenB,EAAM,SAAS,EACpCX,EAAiB,MAAM,UAAY,aAAa8B,EAAa,uBAAuBA,EAAa,6BAA6BA,EAAa,cAC7I,CAEA,SAASC,EAASC,EAAqC,CACrDrB,EAAM,MAAM,IAAM,CAChB,IAAMmB,EAAenB,EAAM,SAAS,EACpC,GAAI,SAAOqB,EAAS,QAAW,WAAaA,EAAS,SAAWF,EAAa,SAC3EnB,EAAM,SAAS,CACb,OAAQqB,EAAS,MACnB,CAAC,EAEG,CAACA,EAAS,UAKZ,OAAOA,EAAS,aAAgB,UAAYA,EAAS,cAAgBF,EAAa,YAAa,CACjG,IAAMG,EAAiB/C,EAAM8C,EAAS,YAAa,EAAGpB,EAAa,OAAO,EAE1E,GAAIqB,IAAmBH,EAAa,YAClC,OAGF,IAAMI,EAAanC,EAAU,YAAc,EACrCoC,EAAapC,EAAU,aAAe,EAEtCqC,GAAeF,EAAaJ,EAAa,kBAAoBA,EAAa,YAC1EO,GAAeF,EAAaL,EAAa,kBAAoBA,EAAa,YAEhFnB,EAAM,SAAS,CACb,YAAasB,EACb,iBAAkBpB,EAAmB,CAACuB,EAAcH,EAAiBC,EAAYD,CAAc,EAC/F,iBAAkBhB,EAAmB,CAACoB,EAAcJ,EAAiBE,EAAYF,CAAc,CACjG,CAAC,EAEL,CAAC,EAEDJ,EAAW,CACb,CAEA,SAASS,EAAiB,CAAE,MAAAC,EAAO,EAAAC,EAAG,EAAAC,CAAE,EAA4C,CAClF,IAAMC,EAAgB3C,EAAU,sBAAsB,EAChDmC,EAAaM,EAAIE,EAAc,KAC/BP,EAAaM,EAAIC,EAAc,IAC/BZ,EAAenB,EAAM,SAAS,EAE9ByB,GAAeF,EAAaJ,EAAa,kBAAoBA,EAAa,YAC1EO,GAAeF,EAAaL,EAAa,kBAAoBA,EAAa,YAE1EG,EAAiB/C,EACrB4C,EAAa,YAAcS,EAAQ3B,EAAa,eAAiBkB,EAAa,YAC9E,EACAlB,EAAa,OACf,EAEAD,EAAM,SAAS,CACb,YAAasB,EACb,iBAAkBpB,EAAmB,CAACuB,EAAcH,EAAiBC,EAAYD,CAAc,EAC/F,iBAAkBhB,EAAmB,CAACoB,EAAcJ,EAAiBE,EAAYF,CAAc,CACjG,CAAC,CACH,CAEA,SAASU,EAASpD,EAAmB,CACnCA,EAAM,eAAe,EACrB,IAAMgD,EAAQ,CAACrD,EAAMK,EAAM,OAAQ,CAACiB,EAAYA,CAAU,EAC1D8B,EAAiB,CAAE,MAAAC,EAAO,EAAGhD,EAAM,QAAS,EAAGA,EAAM,OAAQ,CAAC,EAC9DsC,EAAW,CACb,CAEA,SAASe,EAAmBrD,EAAqB,CAC/CA,EAAM,eAAe,EACrB,GAAM,CAAE,QAAAsD,EAAS,QAAAC,EAAS,UAAAC,CAAU,EAAIxD,EACxC,OAAW,CAACyD,CAAe,IAAKzB,EAAW,QAAQ,EAC7CyB,IAAoBD,GACtBxB,EAAW,IAAIyB,EAAiB,CAAE,EAAGH,EAAS,EAAGC,CAAQ,CAAC,EAI9D,GAAKtB,EAIL,IAAID,EAAW,OAAS,GAAKD,IAAa,QAAS,CACjD,IAAM2B,EAAmB1B,EAAW,OAAO,EACrCrB,EAAQ+C,EAAiB,KAAK,EAAE,MAChC9C,EAAS8C,EAAiB,KAAK,EAAE,MACjCC,EAAc,KAAK,KAAK,KAAK,IAAIhD,EAAM,EAAIC,EAAO,EAAG,CAAC,EAAI,KAAK,IAAID,EAAM,EAAIC,EAAO,EAAG,CAAC,CAAC,EACzF,CAAE,EAAAqC,EAAG,EAAAC,CAAE,EAAIxC,EAAkBC,EAAOC,CAAM,EAC5CiB,EAAe,IACb8B,EAAc9B,GAEhBkB,EAAiB,CAAE,MAAO9B,EAAY,EAAAgC,EAAG,EAAAC,CAAE,CAAC,EAE1CS,EAAc9B,GAEhBkB,EAAiB,CAAE,MAAO,CAAC9B,EAAY,EAAAgC,EAAG,EAAAC,CAAE,CAAC,GAIjDrB,EAAe8B,EACfrB,EAAW,EACX,OAGF,GAAIN,EAAW,OAAS,GAAKD,IAAa,QAAS,CACjD,IAAM6B,EAAUN,EAAUlB,EACpByB,EAAUN,EAAUlB,EACpB,CAAE,YAAAb,CAAY,EAAIJ,EAAM,SAAS,EACvCA,EAAM,SAAS,CACb,iBAAkBE,EAAmBY,EAAgB0B,EAASpC,CAAW,EACzE,iBAAkBE,EAAmBS,EAAgB0B,EAASrC,CAAW,CAC3E,CAAC,EACDc,EAAW,GAEf,CAEA,SAASwB,EAAmB9D,EAAqB,CAG/C,GAFAA,EAAM,eAAe,EAEjBgC,EAAW,OAAS,EACtB,OAGEF,IACF1B,EAAc,EACd0B,EAAgB,IAGlB,GAAM,CAAE,QAAAwB,EAAS,QAAAC,EAAS,UAAAC,CAAU,EAAIxD,EACxCiC,EAAW,GACX,IAAMM,EAAenB,EAAM,SAAS,EACpCc,EAAgBK,EAAa,iBAC7BJ,EAAgBI,EAAa,iBAC7BH,EAASkB,EACTjB,EAASkB,EACTvB,EAAW,IAAIwB,EAAW,CAAE,EAAGF,EAAS,EAAGC,CAAQ,CAAC,EAEhDvB,EAAW,OAAS,IACtBD,EAAW,QAEf,CAEA,SAASgC,EAAiB/D,EAAqB,CAC7CgC,EAAW,OAAOhC,EAAM,SAAS,EAE7BgC,EAAW,OAAS,IACtBC,EAAW,GACXJ,EAAe,IAGbG,EAAW,OAAS,GAAK,CAACF,IAC5BxB,EAAa,EACbwB,EAAgB,IAGdE,EAAW,OAAS,GAAKD,IAAa,UACxCA,EAAW,IAGb,IAAMQ,EAAenB,EAAM,SAAS,EACpCc,EAAgBK,EAAa,iBAC7BJ,EAAgBI,EAAa,gBAC/B,CAEA,SAASyB,GAAsB,CAC7BhC,EAAW,MAAM,EACjBC,EAAW,GACXJ,EAAe,GACVC,IACHxB,EAAa,EACbwB,EAAgB,GAEpB,CAEA,SAASmC,GAAmB,CAC1B,OAAO7C,EAAM,SAAS,EAAE,MAC1B,CAEA,IAAM8C,EAAUrD,EAAsBoD,EAAkBb,CAAQ,EAC1De,EAAoBtD,EAAsBoD,EAAkBH,CAAkB,EAC9EM,EAAqBvD,EAAsBoD,EAAkBD,CAAmB,EAChFK,EAAoBxD,EAAsBoD,EAAkBZ,CAAkB,EAC9EiB,EAAkBzD,EAAsBoD,EAAkBF,CAAgB,EAE1E5D,EAAa,IAAI,gBACjB,CAAE,OAAAE,CAAO,EAAIF,EACnB,OAAAK,EAAU,iBAAiB,QAAS0D,EAAS,CAAE,OAAA7D,CAAO,CAAC,EACvDG,EAAU,iBAAiB,cAAe2D,EAAmB,CAAE,OAAA9D,CAAO,CAAC,EACvEG,EAAU,iBAAiB,eAAgB4D,EAAoB,CAAE,OAAA/D,CAAO,CAAC,EACzEG,EAAU,iBAAiB,cAAe6D,EAAmB,CAAE,OAAAhE,CAAO,CAAC,EACvEG,EAAU,iBAAiB,YAAa8D,EAAiB,CAAE,OAAAjE,CAAO,CAAC,EAE5D,CACL,SAAU,CACRF,EAAW,MAAM,EACjBiB,EAAM,QAAQ,CAChB,EACA,UAAWA,EAAM,UACjB,SAAAoB,EACA,SAAUpB,EAAM,QAClB,CACF","sourcesContent":["function f(o){let r=new Set,s=!1,a=o,e,c=(t={})=>{e={...e,...t},i();},i=()=>{if(s)return;let t=!1;if(e){for(let n in e)if(a[n]!==e[n]){t=!0;break}}t&&(a={...a,...e},r.forEach(n=>n({state:a,updatedProperties:e})),e=void 0);};return {subscribe:t=>(r.add(t),()=>{r.delete(t);}),cleanup:()=>r.clear(),getState:()=>a,setState:c,batch:t=>{s=!0,t(),s=!1,i();}}}\n\nexport { f as a };\n","export function clamp(value: number, min: number, max: number) {\n  return Math.max(min, Math.min(max, value))\n}\n\nfunction preventDefault(event: Event) {\n  event.preventDefault()\n}\n\nconst keySet = new Set([\"ArrowUp\", \"ArrowRight\", \"ArrowDown\", \"ArrowLeft\"])\nfunction preventDefaultForScrollKeys(event: KeyboardEvent) {\n  if (keySet.has(event.key)) {\n    preventDefault(event)\n    return false\n  }\n}\n\nlet controller: AbortController | undefined\n\nexport function disableScroll() {\n  controller = new AbortController()\n  const { signal } = controller\n  window.addEventListener(\"DOMMouseScroll\", preventDefault, { signal })\n  window.addEventListener(\"wheel\", preventDefault, { passive: false, signal })\n  window.addEventListener(\"touchmove\", preventDefault, { passive: false, signal })\n  window.addEventListener(\"keydown\", preventDefaultForScrollKeys, { signal })\n}\n\nexport function enableScroll() {\n  controller?.abort()\n}\n\nexport function getSourceImage(container: HTMLElement) {\n  if (!container) {\n    throw new Error(\"Please specify a container for the zoom image\")\n  }\n\n  const sourceImgElement = container.querySelector(\"img\")\n  if (!sourceImgElement) {\n    throw new Error(\"Please place an image inside the container\")\n  }\n\n  return sourceImgElement\n}\n\nexport type PointerPosition = {\n  x: number\n  y: number\n}\n\nexport function getPointersCenter(first: PointerPosition, second: PointerPosition) {\n  return {\n    x: (first.x + second.x) / 2,\n    y: (first.y + second.y) / 2,\n  }\n}\n\nexport function makeMaybeCallFunction<T>(predicateFn: () => boolean, fn: (arg: T) => void) {\n  return (arg: T) => {\n    if (predicateFn()) {\n      fn(arg)\n    }\n  }\n}\n\nexport const scaleLinear =\n  ({\n    domainStart,\n    domainStop,\n    rangeStart,\n    rangeStop,\n  }: {\n    domainStart: number\n    domainStop: number\n    rangeStart: number\n    rangeStop: number\n  }) =>\n  (value: number) =>\n    rangeStart + (rangeStop - rangeStart) * ((value - domainStart) / (domainStop - domainStart))\n","import { createStore } from \"@namnode/store\"\nimport { clamp, disableScroll, enableScroll, getPointersCenter, getSourceImage, makeMaybeCallFunction } from \"./utils\"\nimport type { PointerPosition } from \"./utils\"\n\nexport type ZoomImageWheelOptions = {\n  maxZoom?: number\n  wheelZoomRatio?: number\n}\n\n/* The delta values are not consistent across browsers.\n * We need to normalize them to a consistent value.\n * https://developer.mozilla.org/en-US/docs/Web/API/WheelEvent/deltaY\n */\nconst ZOOM_DELTA = 0.5\n\nexport type ZoomImageWheelState = {\n  currentZoom: number\n  enable: boolean\n  currentPositionX: number\n  currentPositionY: number\n}\n\nexport type ZoomImageWheelStateUpdate = Partial<{ enable: boolean; currentZoom: number }>\n\nexport function createZoomImageWheel(container: HTMLElement, options: ZoomImageWheelOptions = {}) {\n  const store = createStore<ZoomImageWheelState>({\n    currentZoom: 1,\n    enable: true,\n    currentPositionX: 0,\n    currentPositionY: 0,\n  })\n\n  const sourceImgElement = getSourceImage(container)\n  const finalOptions: Required<ZoomImageWheelOptions> = {\n    maxZoom: options.maxZoom || 4,\n    wheelZoomRatio: options.wheelZoomRatio || 0.1,\n  }\n\n  const calculatePositionX = (newPositionX: number, currentZoom: number) => {\n    const width = container.clientWidth\n    if (newPositionX > 0) return 0\n    if (newPositionX + width * currentZoom < width) return -width * (currentZoom - 1)\n    return newPositionX\n  }\n\n  const calculatePositionY = (newPositionY: number, currentZoom: number) => {\n    const height = container.clientHeight\n\n    if (newPositionY > 0) return 0\n    if (newPositionY + height * currentZoom < height) return -height * (currentZoom - 1)\n    return newPositionY\n  }\n\n  let prevDistance = -1\n  let enabledScroll = true\n  let zoomType: \"wheel\" | \"pinch\" | \"\" = \"\"\n  const pointerMap = new Map<number, { x: number; y: number }>()\n\n  let isOnMove = false\n  let lastPositionX = 0\n  let lastPositionY = 0\n  let startX = 0\n  let startY = 0\n\n  container.style.overflow = \"hidden\"\n  sourceImgElement.style.transformOrigin = \"0 0\"\n\n  function updateZoom() {\n    const currentState = store.getState()\n    sourceImgElement.style.transform = `translate(${currentState.currentPositionX}px, ${currentState.currentPositionY}px) scale(${currentState.currentZoom})`\n  }\n\n  function setState(newState: ZoomImageWheelStateUpdate) {\n    store.batch(() => {\n      const currentState = store.getState()\n      if (typeof newState.enable === \"boolean\" && newState.enable !== currentState.enable) {\n        store.setState({\n          enable: newState.enable,\n        })\n\n        if (!newState.enable) {\n          return\n        }\n      }\n\n      if (typeof newState.currentZoom === \"number\" && newState.currentZoom !== currentState.currentZoom) {\n        const newCurrentZoom = clamp(newState.currentZoom, 1, finalOptions.maxZoom)\n\n        if (newCurrentZoom === currentState.currentZoom) {\n          return\n        }\n\n        const zoomPointX = container.clientWidth / 2\n        const zoomPointY = container.clientHeight / 2\n\n        const zoomTargetX = (zoomPointX - currentState.currentPositionX) / currentState.currentZoom\n        const zoomTargetY = (zoomPointY - currentState.currentPositionY) / currentState.currentZoom\n\n        store.setState({\n          currentZoom: newCurrentZoom,\n          currentPositionX: calculatePositionX(-zoomTargetX * newCurrentZoom + zoomPointX, newCurrentZoom),\n          currentPositionY: calculatePositionY(-zoomTargetY * newCurrentZoom + zoomPointY, newCurrentZoom),\n        })\n      }\n    })\n\n    updateZoom()\n  }\n\n  function processZoomWheel({ delta, x, y }: { delta: number; x: number; y: number }) {\n    const containerRect = container.getBoundingClientRect()\n    const zoomPointX = x - containerRect.left\n    const zoomPointY = y - containerRect.top\n    const currentState = store.getState()\n\n    const zoomTargetX = (zoomPointX - currentState.currentPositionX) / currentState.currentZoom\n    const zoomTargetY = (zoomPointY - currentState.currentPositionY) / currentState.currentZoom\n\n    const newCurrentZoom = clamp(\n      currentState.currentZoom + delta * finalOptions.wheelZoomRatio * currentState.currentZoom,\n      1,\n      finalOptions.maxZoom,\n    )\n\n    store.setState({\n      currentZoom: newCurrentZoom,\n      currentPositionX: calculatePositionX(-zoomTargetX * newCurrentZoom + zoomPointX, newCurrentZoom),\n      currentPositionY: calculatePositionY(-zoomTargetY * newCurrentZoom + zoomPointY, newCurrentZoom),\n    })\n  }\n\n  function _onWheel(event: WheelEvent) {\n    event.preventDefault()\n    const delta = -clamp(event.deltaY, -ZOOM_DELTA, ZOOM_DELTA)\n    processZoomWheel({ delta, x: event.clientX, y: event.clientY })\n    updateZoom()\n  }\n\n  function _handlePointerMove(event: PointerEvent) {\n    event.preventDefault()\n    const { clientX, clientY, pointerId } = event\n    for (const [cachedPointerid] of pointerMap.entries()) {\n      if (cachedPointerid === pointerId) {\n        pointerMap.set(cachedPointerid, { x: clientX, y: clientY })\n      }\n    }\n\n    if (!isOnMove) {\n      return\n    }\n\n    if (pointerMap.size === 2 && zoomType === \"pinch\") {\n      const pointersIterator = pointerMap.values()\n      const first = pointersIterator.next().value as PointerPosition\n      const second = pointersIterator.next().value as PointerPosition\n      const curDistance = Math.sqrt(Math.pow(first.x - second.x, 2) + Math.pow(first.y - second.y, 2))\n      const { x, y } = getPointersCenter(first, second)\n      if (prevDistance > 0) {\n        if (curDistance > prevDistance) {\n          // The distance between the two pointers has increased\n          processZoomWheel({ delta: ZOOM_DELTA, x, y })\n        }\n        if (curDistance < prevDistance) {\n          // The distance between the two pointers has decreased\n          processZoomWheel({ delta: -ZOOM_DELTA, x, y })\n        }\n      }\n      // Store the distance for the next move event\n      prevDistance = curDistance\n      updateZoom()\n      return\n    }\n\n    if (pointerMap.size === 1 && zoomType !== \"pinch\") {\n      const offsetX = clientX - startX\n      const offsetY = clientY - startY\n      const { currentZoom } = store.getState()\n      store.setState({\n        currentPositionX: calculatePositionX(lastPositionX + offsetX, currentZoom),\n        currentPositionY: calculatePositionY(lastPositionY + offsetY, currentZoom),\n      })\n      updateZoom()\n    }\n  }\n\n  function _handlePointerDown(event: PointerEvent) {\n    event.preventDefault()\n\n    if (pointerMap.size === 2) {\n      return\n    }\n\n    if (enabledScroll) {\n      disableScroll()\n      enabledScroll = false\n    }\n\n    const { clientX, clientY, pointerId } = event\n    isOnMove = true\n    const currentState = store.getState()\n    lastPositionX = currentState.currentPositionX\n    lastPositionY = currentState.currentPositionY\n    startX = clientX\n    startY = clientY\n    pointerMap.set(pointerId, { x: clientX, y: clientY })\n\n    if (pointerMap.size === 2) {\n      zoomType = \"pinch\"\n    }\n  }\n\n  function _handlePointerUp(event: PointerEvent) {\n    pointerMap.delete(event.pointerId)\n\n    if (pointerMap.size === 0) {\n      isOnMove = false\n      prevDistance = -1\n    }\n\n    if (pointerMap.size === 0 && !enabledScroll) {\n      enableScroll()\n      enabledScroll = true\n    }\n\n    if (pointerMap.size === 0 && zoomType === \"pinch\") {\n      zoomType = \"\"\n    }\n\n    const currentState = store.getState()\n    lastPositionX = currentState.currentPositionX\n    lastPositionY = currentState.currentPositionY\n  }\n\n  function _handlePointerLeave() {\n    pointerMap.clear()\n    isOnMove = false\n    prevDistance = -1\n    if (!enabledScroll) {\n      enableScroll()\n      enabledScroll = true\n    }\n  }\n\n  function checkZoomEnabled() {\n    return store.getState().enable\n  }\n\n  const onWheel = makeMaybeCallFunction(checkZoomEnabled, _onWheel)\n  const handlePointerDown = makeMaybeCallFunction(checkZoomEnabled, _handlePointerDown)\n  const handlePointerLeave = makeMaybeCallFunction(checkZoomEnabled, _handlePointerLeave)\n  const handlePointerMove = makeMaybeCallFunction(checkZoomEnabled, _handlePointerMove)\n  const handlePointerUp = makeMaybeCallFunction(checkZoomEnabled, _handlePointerUp)\n\n  const controller = new AbortController()\n  const { signal } = controller\n  container.addEventListener(\"wheel\", onWheel, { signal })\n  container.addEventListener(\"pointerdown\", handlePointerDown, { signal })\n  container.addEventListener(\"pointerleave\", handlePointerLeave, { signal })\n  container.addEventListener(\"pointermove\", handlePointerMove, { signal })\n  container.addEventListener(\"pointerup\", handlePointerUp, { signal })\n\n  return {\n    cleanup() {\n      controller.abort()\n      store.cleanup()\n    },\n    subscribe: store.subscribe,\n    setState,\n    getState: store.getState,\n  }\n}\n"]}